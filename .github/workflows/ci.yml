name: FastAPI CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

        # Step-1 Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name:  Virtual ENV
        uses: actions/cache@v4
        id: cache-venv # name for referring later
        with:
          path: venv # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests   
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions doesn't preserve the environment   
        run: . venv/bin/activate && pytest
        
      # - name: Debug directory structure
      #   run: |
      #     pwd
      #     ls -R venv

      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.9/site-packages
          zip -r9 ../../../../api.zip .

      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: api.zip
